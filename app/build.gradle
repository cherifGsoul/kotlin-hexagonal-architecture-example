/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.10'
}

repositories {
    google()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'

    // Use the JUnit 5 integration.
    testImplementation libs.junit.jupiter.engine

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation "io.ktor:ktor-server-core:2.3.8"
    implementation "io.ktor:ktor-server-netty:2.3.8"
    implementation "ch.qos.logback:logback-classic:1.4.14"
    implementation "io.ktor:ktor-server-resources:2.3.8"
    implementation "io.ktor:ktor-server-content-negotiation:2.3.8"
    implementation "io.ktor:ktor-serialization-kotlinx-json:2.3.8"
    implementation "io.ktor:ktor-server-default-headers:2.3.8"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'dev.cherif.kthexa.AppKt'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
